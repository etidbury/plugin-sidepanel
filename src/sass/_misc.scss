/*

-   add "<a href='#' id='sidepanel-overlay-close' />"
    if you want the main content to be overlayed, and have the clicking of
    the main content close the panel.

-


--------EXAMPLE--------
<body>
  <aside id='panel-1'>

    <div>
      ...[SIDE PANEL CONTENT]...
    </div>
  </aside>

  <main>
    <a href='#' id='sidepanel-overlay-close' />

    ...[SIDE PANEL CONTENT]...
  </main>

</body>
--------/EXAMPLE--------
 */

$mobile-mode-max-width: 767px;
$hd-desktop-min-width: 920px;

$selector-menu: aside;
$selector-content: main;
$selector-overlay-close: #sidepanel-overlay-close;

$hd-desktop-aside-width: 30vw;
$aside-width: 50vw;
$aside-max-width: 300px;
$m-aside-width: 700vw;
$overlay-bg: #000;
$overlay-opacity: 0.3;
$display-animation-duration: 0.5s;

html, body {
  height: 100%;
  width: 100%;
}

body {
  @include display-flex;
  @include align-items(flex-start);
  @include align-content(flex-start);
}

#{$selector-content} {
  height: 100%;
  width: 100%;
  overflow-y: auto;
}

#{$selector-menu} {

  position: static;
  top: 0;
  flex-basis: 0;
  height: 100%;

  @include transition(flex-basis $display-animation-duration ease-out);

  overflow-x: hidden;
  overflow-y: auto;

  @include display-flex;

  & > * {
    flex-basis: $aside-width;

    min-width: (0.6*$aside-width);

  }

  &:target {

    flex-basis: $aside-width;

    /*position:static;*/

    /*& *{
      white-space: pre-wrap;
    }*/
  }

  &:target ~ #{$selector-content} {
    overflow: hidden;
  }

  /*-----------overlay-close---------*/
  & ~ #{$selector-content} > #{$selector-overlay-close} {
    display: none;
    background: $overlay-bg;
    opacity: 0;
    position: fixed;
    top: 0;
    width: 100%;
    height: 100%;
  }

  &:target ~ #{$selector-content} > #{$selector-overlay-close} {
    display: block;
    opacity: $overlay-opacity;
  }
  /*-----------/overlay-close---------*/

}

@media (max-width: $mobile-mode-max-width) {

  #{$selector-menu} {

    @include transition(width $display-animation-duration ease-out);

    width: 0;
    flex-basis: inherit;

    & > * {
      width: 0;
      min-width: 100%;
    }

    &:target {

      flex-basis: inherit;
      width: $m-aside-width;

    }

  }

}

@media (min-width: $hd-desktop-min-width) {
  #{$selector-menu} {

    flex-basis: 0;

    & > * {
      flex-basis: $hd-desktop-aside-width;

      min-width: (0.6*$hd-desktop-aside-width);
    }

    &:target {

      flex-basis: $hd-desktop-aside-width;

      color: green;

    }

  }
}



